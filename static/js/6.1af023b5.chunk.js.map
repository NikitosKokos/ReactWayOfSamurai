{"version":3,"sources":["utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Login/LoginForm/LoginForm.module.css","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["required","value","maxLength","max","length","undefined","FormControl","input","meta","touched","error","children","warning","errorClass","hasError","className","s","formControl","textarea","checkebox","errors","Textarea","props","restProps","Input","module","exports","LoginForm","handleSubmit","form","onSubmit","Field","type","name","component","validate","placeholder","submitError","checkbox","id","label","htmlFor","btn","reduxForm","connect","state","isAuth","auth","login","to","wrapper","title","formData","email","password","rememberMe"],"mappings":"4FAAA,oEAAO,IAAMA,EAAW,SAAAC,GACpB,IAAGA,EAEH,MAAO,qBAGEC,EAAY,SAAAC,GAAG,OAAI,SAAAF,GAAK,OAAIA,GAASA,EAAMG,OAASD,EAAxB,kBAAyCA,EAAzC,4BAAoEE,K,gKCFvGC,EAAc,SAAC,GAA+E,EAA9EC,MAA+E,IAAD,IAAvEC,KAAQC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,MAAkBC,GAAoC,EAA/CC,QAA+C,EAApCD,UAAUE,EAA0B,EAA1BA,WAChEC,GAD0F,wDAC9EL,GAAWC,GAC7B,OACI,sBAAKK,UAAS,UAAKC,IAAEC,YAAP,YAAuBH,EAAW,QAAS,IAAzD,UACI,sBAAKC,UAAWC,IAAEE,SAAlB,UACKP,EACD,sBAAMI,UAAWC,IAAEG,eAEvB,qBAAKJ,UAAWC,IAAEI,OAAlB,SACKN,GAAY,mBAAGC,UAAS,UAAKC,IAAEN,MAAP,YAAgBG,GAA0B,IAAtD,SAA6DH,UAO7EW,EAAW,SAACC,GAAW,IACzBf,EAAuBe,EAAvBf,MAAUgB,EADc,YACDD,EADC,WAE/B,OAAO,cAAChB,EAAD,2BAAiBgB,GAAjB,aAAwB,oDAAcf,GAAWgB,QAG/CC,EAAQ,SAACF,GAAW,IACtBf,EAAuBe,EAAvBf,MAAUgB,EADW,YACED,EADF,WAE5B,OAAO,cAAChB,EAAD,2BAAiBgB,GAAjB,aAAwB,iDAAWf,GAAWgB,S,oBC1BzDE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,SAAW,+BAA+B,MAAQ,4BAA4B,UAAY,kC,oBCA5JD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,uB,oBCAxFD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,SAAW,4BAA4B,IAAM,uBAAuB,YAAc,+BAA+B,MAAQ,2B,yJCKvMC,EAAY,YAA4B,IAA1BC,EAAyB,EAAzBA,aAAclB,EAAW,EAAXA,MAC5B,OACQ,uBAAMK,UAAWC,IAAEa,KAAMC,SAAUF,EAAnC,UAGI,qBAAKb,UAAWC,IAAET,MAAlB,SACI,cAACwB,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,QACLC,UAAWV,IACXW,SAAU,CAACnC,KACXoC,YAAY,YAGpB,qBAAKrB,UAAWC,IAAET,MAAlB,SACI,cAACwB,EAAA,EAAD,CACIC,KAAK,WACLC,KAAK,WACLC,UAAWV,IACXW,SAAU,CAACnC,KACXoC,YAAY,eAGnB1B,GAAS,qBAAKK,UAAWC,IAAEqB,YAAlB,SACL3B,IAEL,sBAAKK,UAAWC,IAAEsB,SAAlB,UACI,cAACP,EAAA,EAAD,CACIC,KAAK,WACLO,GAAG,aACHN,KAAK,aACLC,UAAWV,MAEf,uBAAOT,UAAWC,IAAEwB,MAAOC,QAAQ,aAAnC,4BAEJ,8BACI,wBAAQ1B,UAAWC,IAAE0B,IAArB,SAA0B,iDAU/Bf,EAJfA,EAAYgB,YAAU,CAClBd,KAAM,SADEc,CAEPhB,GCtBUiB,uBAHQ,SAACC,GAAD,MAAY,CAC/BC,OAAQD,EAAME,KAAKD,UAEiB,CAACE,WAA1BJ,EArBD,SAACtB,GAKX,OAAGA,EAAMwB,OACE,cAAC,IAAD,CAAUG,GAAG,aAGpB,qBAAKlC,UAAWC,IAAEgC,MAAlB,SACI,sBAAKjC,UAAWC,IAAEkC,QAAlB,UACI,oBAAInC,UAAWC,IAAEmC,MAAjB,mBACA,cAAC,EAAD,CAAWrB,SAXN,SAACsB,GACd9B,EAAM0B,MAAMI,EAASC,MAAMD,EAASE,SAASF,EAASG","file":"static/js/6.1af023b5.chunk.js","sourcesContent":["export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\n\r\nexport const minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from './FormControls.module.css';\r\n\r\nconst FormControl = ({input, meta: { touched, error, warning }, children, errorClass, ...props}) => {\r\n    const hasError =  touched && error;\r\n    return (\r\n        <div className={`${s.formControl} ${ hasError ? 'error': ''}`}>\r\n            <div className={s.textarea}>\r\n                {children}\r\n                <span className={s.checkebox}></span>\r\n            </div>\r\n            <div className={s.errors}>\r\n               { hasError && <p className={`${s.error} ${errorClass ? errorClass : ''}`}>{error}</p>} \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type, text) => (\r\n<div className={s.input}><Field \r\n    placeholder={placeholder} \r\n    name={name}\r\n    validators={validators}\r\n    component={component}\r\n    type={type ? type : \"text\"}\r\n/></div>)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2g-FB\",\"textarea\":\"FormControls_textarea__Ji8_w\",\"error\":\"FormControls_error__2zH4w\",\"checkebox\":\"FormControls_checkebox__2MJo8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__qvWQK\",\"wrapper\":\"Login_wrapper__2ZvQW\",\"login\":\"Login_login__2j1Fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__35rMR\",\"label\":\"LoginForm_label__ovmdi\",\"checkbox\":\"LoginForm_checkbox__3aDJM\",\"btn\":\"LoginForm_btn__35EM8\",\"submitError\":\"LoginForm_submitError__1dnii\",\"input\":\"LoginForm_input__3_OkY\"};","import React from 'react';\r\nimport s from './LoginForm.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { createField, Input } from '../../common/FormControls/FormControls';\r\nimport { required } from '../../../utils/validators/validators';\r\n\r\nlet LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                {/* {createField('Email','email',[required],Input)}\r\n                {createField('Password','password',[required],Input,'password')} */}\r\n                <div className={s.input}>\r\n                    <Field \r\n                        type=\"text\" \r\n                        name='email' \r\n                        component={Input} \r\n                        validate={[required]}\r\n                        placeholder='Email'\r\n                    />\r\n                </div>\r\n                <div className={s.input}>\r\n                    <Field \r\n                        type=\"password\" \r\n                        name='password' \r\n                        component={Input} \r\n                        validate={[required]}\r\n                        placeholder='Password'\r\n                    />\r\n                </div>\r\n                {error && <div className={s.submitError}>\r\n                    {error}\r\n                </div>}\r\n                <div className={s.checkbox}>\r\n                    <Field \r\n                        type=\"checkbox\" \r\n                        id='rememberMe' \r\n                        name='rememberMe'  \r\n                        component={Input}\r\n                    />\r\n                    <label className={s.label} htmlFor=\"rememberMe\">remember me</label>\r\n                </div>\r\n                <div>\r\n                    <button className={s.btn}><span>Login</span></button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nLoginForm = reduxForm({\r\n    form: 'login'\r\n  })(LoginForm);\r\n\r\nexport default LoginForm;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport s from './Login.module.css';\r\nimport LoginForm from './LoginForm/LoginForm';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe);\r\n         \r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.wrapper}>\r\n                <h1 className={s.title}>login</h1>\r\n                <LoginForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}