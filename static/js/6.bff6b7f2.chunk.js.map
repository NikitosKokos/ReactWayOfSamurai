{"version":3,"sources":["utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Login/LoginForm/LoginForm.module.css","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["required","value","maxLength","max","length","undefined","FormControl","input","meta","touched","error","children","warning","errorClass","isPass","setIsPass","isPassword","type","hasError","className","s","formControl","field","password","checkebox","onClick","eye","active","x","y","viewBox","fill","d","errors","Textarea","props","restProps","Input","React","useState","inputType","module","exports","LoginForm","handleSubmit","captchaUrl","form","onSubmit","Field","name","component","validate","placeholder","submitError","captch","src","checkbox","id","label","htmlFor","btn","reduxForm","connect","state","isAuth","auth","login","to","wrapper","title","formData","email","rememberMe","captcha"],"mappings":"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","file":"static/js/6.bff6b7f2.chunk.js","sourcesContent":["export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\n\r\nexport const minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from './FormControls.module.css';\r\n\r\nconst FormControl = ({input, meta: { touched, error, warning }, children, errorClass, isPass, setIsPass, isPassword, type, ...props}) => {\r\n    const hasError =  touched && error;\r\n    return (\r\n        <div className={s.formControl}>\r\n            <div className={`${s.field} ${isPassword ? s.password : ''}`}>\r\n                {children}\r\n                {type === 'checkbox' && <span className={s.checkebox}></span>}\r\n                {isPassword && <div onClick={() => setIsPass(!isPass)} className={`${s.eye} ${isPass ? '' : s.active}`}>\r\n                <svg x=\"0px\" y=\"0px\"\r\n                    viewBox=\"0 0 488.85 488.85\">\r\n                <g>\r\n                    <path fill='#393e46' d=\"M244.425,98.725c-93.4,0-178.1,51.1-240.6,134.1c-5.1,6.8-5.1,16.3,0,23.1c62.5,83.1,147.2,134.2,240.6,134.2\r\n                        s178.1-51.1,240.6-134.1c5.1-6.8,5.1-16.3,0-23.1C422.525,149.825,337.825,98.725,244.425,98.725z M251.125,347.025\r\n                        c-62,3.9-113.2-47.2-109.3-109.3c3.2-51.2,44.7-92.7,95.9-95.9c62-3.9,113.2,47.2,109.3,109.3\r\n                        C343.725,302.225,302.225,343.725,251.125,347.025z M248.025,299.625c-33.4,2.1-61-25.4-58.8-58.8c1.7-27.6,24.1-49.9,51.7-51.7\r\n                        c33.4-2.1,61,25.4,58.8,58.8C297.925,275.625,275.525,297.925,248.025,299.625z\"/>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                </svg>\r\n                </div>}\r\n            </div>\r\n            <div className={s.errors}>\r\n               { hasError && <p className={`${s.error} ${errorClass ? errorClass : ''}`}>{error}</p>} \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, password, type, ...restProps} = props;\r\n    const [isPass, setIsPass] = React.useState(password);\r\n    // Type definition\r\n    const inputType = isPass ? 'password' : type === 'password' ? 'text' : type;\r\n    return <FormControl isPassword={password} type={inputType} isPass={isPass} setIsPass={setIsPass} {...props}><input type={inputType} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type, text) => (\r\n<div className={s.input}><Field \r\n    placeholder={placeholder} \r\n    name={name}\r\n    validators={validators}\r\n    component={component}\r\n    type={type ? type : \"text\"}\r\n/></div>)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2g-FB\",\"field\":\"FormControls_field__Ng8yj\",\"password\":\"FormControls_password__3DyVu\",\"error\":\"FormControls_error__2zH4w\",\"checkebox\":\"FormControls_checkebox__2MJo8\",\"eye\":\"FormControls_eye__GoE4S\",\"active\":\"FormControls_active__1pP40\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__qvWQK\",\"wrapper\":\"Login_wrapper__2ZvQW\",\"login\":\"Login_login__2j1Fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__35rMR\",\"label\":\"LoginForm_label__ovmdi\",\"checkbox\":\"LoginForm_checkbox__3aDJM\",\"btn\":\"LoginForm_btn__35EM8\",\"submitError\":\"LoginForm_submitError__1dnii\",\"input\":\"LoginForm_input__3_OkY\"};","import React from 'react';\r\nimport s from './LoginForm.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport { required } from '../../../utils/validators/validators';\r\n\r\nlet LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                <div className={s.input}>\r\n                    <Field \r\n                        type=\"text\" \r\n                        name='email' \r\n                        component={Input} \r\n                        validate={[required]}\r\n                        placeholder='Email'\r\n                    />\r\n                </div>\r\n                <div className={s.input}>\r\n                    <Field \r\n                        password={true} \r\n                        name='password' \r\n                        component={Input} \r\n                        validate={[required]}\r\n                        placeholder='Password'\r\n                    />\r\n                </div>\r\n                {error && <div className={s.submitError}>\r\n                    {error}\r\n                </div>}\r\n                { captchaUrl && \r\n                <div className={s.captch}>\r\n                    <img src={captchaUrl} />\r\n                    <div className={s.input}>\r\n                        <Field \r\n                            type=\"text\" \r\n                            name='captcha' \r\n                            component={Input} \r\n                            validate={[required]}\r\n                            placeholder='Symbols form image'\r\n                        />\r\n                    </div>\r\n                </div> }\r\n                <div className={s.checkbox}>\r\n                    <Field \r\n                        type=\"checkbox\" \r\n                        id='rememberMe' \r\n                        name='rememberMe'  \r\n                        component={Input}\r\n                    />\r\n                    <label className={s.label} htmlFor=\"rememberMe\">remember me</label>\r\n                </div>\r\n                <div>\r\n                    <button className={s.btn}><span>Login</span></button>\r\n                </div>\r\n            </form>\r\n    )   \r\n}\r\n\r\nLoginForm = reduxForm({\r\n    form: 'login'\r\n  })(LoginForm);\r\n\r\nexport default LoginForm;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport s from './Login.module.css';\r\nimport LoginForm from './LoginForm/LoginForm';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.wrapper}>\r\n                <h1 className={s.title}>login</h1>\r\n                <LoginForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}