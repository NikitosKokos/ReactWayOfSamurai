{"version":3,"sources":["utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/SendMessage/SendMessage.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/SendMessage/SendMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLength","max","length","undefined","FormControl","input","meta","touched","error","children","warning","errorClass","hasError","className","s","formControl","textarea","checkebox","errors","Textarea","props","restProps","Input","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogsItem","path","id","dialog","activeClassName","active","name","Message","message","img","src","avatar","alt","body","text","maxLength300","reduxForm","form","onSubmit","handleSubmit","sendBlock","Field","placeholder","type","component","validate","btn","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addMes","compose"],"mappings":"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","file":"static/js/5.36753384.chunk.js","sourcesContent":["export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\n\r\nexport const minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from './FormControls.module.css';\r\n\r\nconst FormControl = ({input, meta: { touched, error, warning }, children, errorClass, ...props}) => {\r\n    const hasError =  touched && error;\r\n    return (\r\n        <div className={`${s.formControl} ${ hasError ? 'error': ''}`}>\r\n            <div className={s.textarea}>\r\n                {children}\r\n                <span className={s.checkebox}></span>\r\n            </div>\r\n            <div className={s.errors}>\r\n               { hasError && <p className={`${s.error} ${errorClass ? errorClass : ''}`}>{error}</p>} \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type, text) => (\r\n<div className={s.input}><Field \r\n    placeholder={placeholder} \r\n    name={name}\r\n    validators={validators}\r\n    component={component}\r\n    type={type ? type : \"text\"}\r\n/></div>)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2g-FB\",\"textarea\":\"FormControls_textarea__Ji8_w\",\"error\":\"FormControls_error__2zH4w\",\"checkebox\":\"FormControls_checkebox__2MJo8\"};","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n)\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__M36JI\",\"dialogsItems\":\"Dialogs_dialogsItems__3PAzJ\",\"dialog\":\"Dialogs_dialog__1cG5E\",\"hide\":\"Dialogs_hide__1G1o-\",\"messages\":\"Dialogs_messages__mSEou\",\"body\":\"Dialogs_body__2ACIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__--dsK\",\"active\":\"DialogsItem_active__2b7hN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1-Rpz\",\"body\":\"Message_body__31vZH\",\"text\":\"Message_text__uV7FX\",\"img\":\"Message_img__3cuvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendBlock\":\"SendMessage_sendBlock__1fnde\",\"textarea\":\"SendMessage_textarea__eNFBp\",\"btn\":\"SendMessage_btn__2Qway\"};","import s from './DialogsItem.module.css';\r\nimport {\r\n    NavLink\r\n  } from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    const path = `/messages/${props.id}`;\r\n    return <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n}\r\n\r\nexport default DialogsItem;","import s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n                <div className={s.img} ><img src={props.avatar} alt=\"avatar\"/></div>\r\n                <div className={s.body} >\r\n                    <div className={s.text} >{props.text}</div>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default Message;","import s from './SendMessage.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLength} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst maxLength300 = maxLength(300);\r\n\r\nconst SendMessage = (props) => {\r\n    return(\r\n            <form onSubmit={props.handleSubmit} className={s.sendBlock}>\r\n                <div className={s.textarea}>\r\n                    <Field \r\n                        placeholder='Enter your message' \r\n                        type= 'text'\r\n                        component={Textarea} \r\n                        name='message'\r\n                        validate={[required, maxLength300]}\r\n                        errorClass='error-chat-form'\r\n                    />\r\n                </div>\r\n                <button className={s.btn}><span>Send</span></button>\r\n            </form>\r\n    );\r\n}\r\n\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(SendMessage);","import s from './Dialogs.module.css';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport SendMessage from './SendMessage/SendMessage';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport userPhoto from '../../assets/img/user.png';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message text={m.text} key={m.id} avatar={m.avatar} />);\r\n    const sendNewMessage = (values) => {\r\n        props.addMes(values.message);\r\n    }\r\n    if(!props.isAuth) return <Redirect to={'/login'} />;\r\n    return(\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.dialog}>\r\n                    <div className={s.messages}>\r\n                        <div className={s.body}>\r\n                            {messagesElements}\r\n                        </div>\r\n                    </div>\r\n                    <SendMessage onSubmit={sendNewMessage} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { addMes,setUserImage } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    addMes,\r\n}),\r\nwithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}